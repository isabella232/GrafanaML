{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///external \"@grafana/data\"","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///./types/index.ts","webpack:///./utils/RunHistoryClient.ts","webpack:///external \"@grafana/runtime\"","webpack:///./module.ts","webpack:///./AzureMLDataSource.ts","webpack:///./types/styles.ts","webpack:///./types/constants.ts","webpack:///./types/IFilter.ts","webpack:///./ConfigEditor.tsx","webpack:///./QueryEditor.tsx","webpack:///external \"lodash\"","webpack:///./controls/FilterControl.tsx","webpack:///./utils/timeRangePicker.ts","webpack:///./controls/SelectField.tsx","webpack:///./controls/InputField.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","push","__createBinding","k","k2","undefined","__exportStar","__values","__read","ar","error","__spread","concat","__spreadArrays","il","a","j","jl","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__importStar","mod","default","__importDefault","__classPrivateFieldGet","receiver","privateMap","has","__classPrivateFieldSet","set","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","Headers","getDiscoveryUrls","baseUrl","authMethod","workspaceId","path","getBackendSrv","datasourceRequest","url","headers","method","requestId","Date","now","toString","response","data","id","properties","discoveryUrl","console","warn","Error","fetchSubscriptions","map","sub","subscriptionId","displayName","fetchWorkspaces","ws","fetchExperiments","datasource","nameFilter","continuationToken","workspace","JSON","stringify","experiments","ex","experimentId","fetchMetrics","query","runIds","runFilter","join","filter","metric","type","fetchRunsFromIndexService","expIds","exp","listChildRuns","runFilters","forEach","filterProps","fp","runs","run","runName","experimentName","runNumber","runId","fetchData","metricName","getNewToken","run_info","instanceSettings","jsonData","targetRuns","experiment","token","RunHistoryClient","__WEBPACK_EXTERNAL_MODULE__6__","plugin","DataSourcePlugin","AzureMLDataSource","setConfigEditor","ConfigEditor","setQueryEditor","QueryEditor","datasourceType","refreshToken","setInterval","newBody","put","hasRequiredParameters","options","all","targets","frame","MutableDataFrame","refId","fields","FieldType","time","number","metricValues","status","add","createdUtc","flattendData","flat","x","testExperiment","retryCount","setTimeout","testDatasource","message","log","statusText","DataSourceApi","timePickerContainer","width","marginBottom","h2","fontSize","fontWeight","lineHeight","maxWidth","h3","marginTop","horizDivForTimePicker","height","background","borderTop","textAlign","margin","timePicker","marginLeft","timePickerLabel","color","CLIENT_CREDENTIAL_ROUTE","AUTH_TOKEN_ROUTE","SELECT_ALL_LABEL","DATASOURCE_RETRY_TIME","MAX_QUERY_RUNS","PropertyType","RunProperties","FilterOperations","numericOperations","equals","notEqual","lessThan","greaterThan","lessOrEqual","greaterOrEqual","dateFieldOperations","runTypeValueOptions","statusValueOptions","tagOperations","stringOperations","propertyDetailsDict","queryPath","runType","string","allowedValues","targetName","createdDate","date","createdBy","tags","tag","propertiesOptions","props","authOptions","onAuthChange","event","updateDatasourcePluginSecureJsonDataOption","setState","loadResourcesError","onAuthRouteChange","selection","updateDatasourcePluginJsonDataOption","onClientSecretChange","onSubscriptionSelected","onOptionsChange","onWorkspaceSelected","loadingWorkspaceDetails","discoveryUrls","runHistoryUrl","replace","apiUrl","updateDatasourcePluginOption","version","onTenantIdChange","onClientIdChange","hasNecessaryCredentials","secureJsonFields","clientSecret","secureJsonData","clientId","tenantId","authToken","loadSubscriptionsAndWorkspaces","loadSubscriptions","loadWorkspaces","subscriptions","workspaces","find","renderRunTokenPage","Legend","state","componentDidMount","componentDidUpdate","prevProps","render","clientSecretConfigured","authTokenConfigured","className","InlineFormLabel","Input","placeholder","onChange","disabled","invalid","Button","variant","onClick","onUpdateDatasourceResetOption","Field","Select","isLoading","size","style","PureComponent","getLabel","option","getValue","onExperimentSelected","findIndex","onFiltersUpdated","filters","onListChildRunsChange","include","onFilterByExperimentsChange","filterByExperiments","currentTarget","checked","onRunSelected","onRunQuery","onMetricSelected","metrics","showExperimentCountWarning","showRunCountWarning","loadFilteredExperiments","initByTargetRuns","fetchRuns","runItem","keys","expId","selectedRuns","runInfo","retainedRuns","some","runOption","expDict","promises","entries","metricArray","uniq","sort","input","unshift","allExperimentsKey","runOptions","allRunsKey","Label","Checkbox","AsyncMultiSelect","defaultOptions","isClearable","maxVisibleValues","cacheOptions","loadOptions","FilterControl","includeChildRuns","onFiltersUpdate","onChildRunsUpdate","MultiSelect","__WEBPACK_EXTERNAL_MODULE__21__","openEditor","editorOpen","closeEditor","filterValidationError","deleteFilter","index","splice","setProperty","newProp","selectedProperty","operation","setOperation","setSelectValue","setValue","setAdditionalValue","additionalValue","onChildRunsChange","onMoveTimePicker","direction","getShiftedTimeRange","timerangeValue","from","to","nextTimeRange","dateTimeForTimeZone","onZoom","getZoomedTimeRange","validateAndSave","propertyDetails","field","operator","values","displayString","Number","parseFloat","predicate","dateTime","subtract","getPropertyDetailsControl","SelectField","displayError","getValueInputControl","InputField","inputType","placeholderText","TimeRangePicker","timeZone","timeRange","onMoveBackward","shiftDirections","onMoveForward","getAddFilter","icon","marginRight","origRange","range","toUtc","timespan","valueOf","Backward","Forward","factor","center"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","export * from \"./AuthOption\";\r\nexport * from \"./AzureMLDataSourceJsonData\";\r\nexport * from \"./AzureMLDataSourceSettings\";\r\nexport * from \"./AzureMLRunQuery\";\r\nexport * from \"./AzureMLSecureJsonData\";\r\nexport * from \"./styles\";\r\nexport * from \"./constants\";\r\nexport * from \"./SelectableRun\";\r\nexport * from \"./IFilter\";\r\nexport * from \"./ITargetRunInfo\";\r\n","import { getBackendSrv } from '@grafana/runtime';\r\nimport { SelectableValue } from '@grafana/data';\r\nimport { AzureMLDataSource } from 'AzureMLDataSource';\r\nimport { AuthOption, AzureMLRunQuery, IFilterProps, SelectableRun } from 'types';\r\n\r\nexport class RunHistoryClient {\r\n    private static get headers() {\r\n        return new Headers({\r\n            'User-Agent': 'filler',\r\n            'Accept': \"application/json, text/plain, */*\",\r\n            // 'Content-Type': 'application/json; charset=UTF-8'\r\n        });\r\n    }\r\n\r\n    public static async getDiscoveryUrls(baseUrl: string, authMethod: AuthOption, workspaceId: string): Promise<{[key:string]: string}> {\r\n        try {\r\n            const path = `${baseUrl}/management${authMethod}${workspaceId}?api-version=2020-04-01`;\r\n            const response = await getBackendSrv().datasourceRequest({\r\n                url: path,\r\n                headers: this.headers,\r\n                method: 'GET',\r\n                requestId: Date.now().toString()\r\n            });\r\n            if (response && response.data.id === workspaceId) {\r\n                const discoveryResponse = await getBackendSrv().datasourceRequest({\r\n                    url: response.data.properties.discoveryUrl,\r\n                    headers: this.headers,\r\n                    method: 'GET',\r\n                    requestId: Date.now().toString()\r\n                });\r\n                // trim the url to enable calling via proxy when applicable\r\n                return (discoveryResponse.data)\r\n            } else {\r\n                console.warn(response);\r\n                throw new Error(response);\r\n            }\r\n        } catch (err) {\r\n            console.warn(err);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    public static async fetchSubscriptions(baseUrl:string, authMethod: AuthOption): Promise<SelectableValue[]> {\r\n        const path = `${baseUrl}/management${authMethod}/subscriptions?api-version=2019-03-01`;\r\n        const response = await getBackendSrv().datasourceRequest({\r\n          url: path,\r\n          headers: this.headers,\r\n          method: 'GET',\r\n          requestId: Date.now().toString()\r\n        });\r\n        return response.data.value.map(sub => {\r\n            return {\r\n                value: sub.subscriptionId,\r\n                label: sub.displayName\r\n            };\r\n        });\r\n    }\r\n\r\n    public static async fetchWorkspaces(baseUrl: string, authMethod: AuthOption, subscriptionId): Promise<SelectableValue[]> {\r\n        const path = `${baseUrl}/management${authMethod}/subscriptions/${subscriptionId}/providers/Microsoft.MachineLearningServices/workspaces?api-version=2020-04-01`;\r\n        const response = await getBackendSrv().datasourceRequest({\r\n          url: path,\r\n          headers: this.headers,\r\n          method: 'GET',\r\n          requestId: Date.now().toString()\r\n        });\r\n        return response.data.value.map(ws => {\r\n            return {\r\n              value: ws.id,\r\n              label: ws.name\r\n            };\r\n        });\r\n    };\r\n\r\n    public static async fetchExperiments(datasource: AzureMLDataSource, nameFilter?: string, continuationToken?: string): Promise<{experiments: SelectableValue[], continuationToken: string | undefined}> {\r\n        try {\r\n            const path = `${datasource.baseUrl}/runhistory${datasource.authMethod}/history/v1.0/private${datasource.workspace}/experiments:query?urlSafeExperimentNamesOnly=false`;\r\n            const data = {\r\n                \"experimentFilterParams\":{},\r\n                \"viewType\":\"ActiveOnly\",\r\n                \"filter\": nameFilter ? `(contains(Name,'${nameFilter}'))` : \"\",\r\n                \"orderBy\":\"LatestCreatedRunCreatedUtc desc\",\r\n                \"top\":200\r\n            };\r\n            if (continuationToken) {\r\n                data[\"continuationToken\"] = continuationToken\r\n            }\r\n            const response = await getBackendSrv().datasourceRequest({\r\n                url: path,\r\n                headers: this.headers,\r\n                method: 'POST',\r\n                requestId: Date.now().toString(),\r\n                data: JSON.stringify(data)\r\n            });\r\n            const experiments = response.data.value.map(ex => {\r\n                return {\r\n                value: ex.experimentId,\r\n                label: ex.name\r\n                }\r\n            });\r\n            return {\r\n                experiments,\r\n                continuationToken: response.data.continuationToken\r\n            }\r\n        } catch(err) {\r\n            console.warn(err);\r\n            throw err;\r\n        }\r\n    }\r\n    \r\n    public static async fetchMetrics(datasource: AzureMLDataSource, query: AzureMLRunQuery,experimentId: string,  runIds: string[]): Promise<string[]> {\r\n        try {\r\n            const runFilter = 'runIds=' + runIds.join('&runIds=');\r\n            const path = `${datasource.baseUrl}/runhistory${datasource.authMethod}/history/v2.0${datasource.workspace}/experimentids/${experimentId}/metricsmeta?${runFilter}&withRetries=false`;\r\n            const response = await getBackendSrv().datasourceRequest({\r\n                url: path,\r\n                headers: this.headers,\r\n                method: 'GET',\r\n                requestId: Date.now().toString()\r\n            });\r\n            return response.data.result.value.filter(metric => {\r\n                return metric.type == \"azureml.v1.scalar\"\r\n            }).map(metric => metric.name);\r\n        } catch (err) {\r\n            console.warn(err);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    public static async fetchRunsFromIndexService(datasource: AzureMLDataSource, query: AzureMLRunQuery):Promise<{runs: SelectableRun[], continuationToken}> {\r\n        try {\r\n            const path = `${datasource.baseUrl}/api${datasource.authMethod}/index/v1.0${datasource.workspace}/entities`;\r\n            const filters: IFilterProps[] = [\r\n                {\"field\":\"type\",\"operator\":\"eq\",\"values\":[\"runs\"]},\r\n                {\"field\":\"annotations/archived\",\"operator\":\"eq\",\"values\":[false]}\r\n            ];\r\n            if (query.experiments && query.experiments.length > 0) {\r\n                const expIds = query.experiments.map(exp => exp.value);\r\n                filters.push({\"field\":\"properties/experimentId\",\"operator\":\"eq\",\"values\": expIds });\r\n            }\r\n            if (!query.listChildRuns) {\r\n                filters.push({\"field\":\"properties/parentRunId\",\"operator\":\"eq\",\"values\":[null]});\r\n            }\r\n            if (query.runFilters) {\r\n                query.runFilters.forEach(filter => {\r\n                    filter.filterProps.forEach(fp => {filters.push(fp);});\r\n                });\r\n            }\r\n            const body = {\r\n                \"filters\": filters,\r\n                \"order\":[\r\n                    {\"field\":\"properties/experimentName\",\"direction\":\"Asc\"},\r\n                    {\"field\":\"properties/runNumber\",\"direction\":\"Desc\"}],\r\n                \"pageSize\":2000,\r\n                \"skip\":0,\r\n                \"includeTotalResultCount\":true\r\n            }\r\n\r\n            const response = await getBackendSrv().datasourceRequest({\r\n                url: path,\r\n                headers: this.headers,\r\n                method: 'POST',\r\n                requestId: Date.now().toString(),\r\n                data: JSON.stringify(body)\r\n            });\r\n            const runs = response.data.value.map(run => {\r\n                const label = run.properties.runName ?? `${run.properties.experimentName} ${run.properties.runNumber}`;\r\n                return { \r\n                    label,\r\n                    experimentId: run.properties.experimentId,\r\n                    value: run.properties.runId\r\n                };\r\n            });\r\n            return {runs, continuationToken: response.data.continuationToken}\r\n        } catch (err) {\r\n            console.warn(err);\r\n            return {runs: [], continuationToken: undefined};\r\n        }\r\n    }\r\n\r\n    public static async fetchData(datasource: AzureMLDataSource, query: AzureMLRunQuery, runId: string): Promise<any[]> {\r\n        try {\r\n            const path = `${datasource.baseUrl}/runhistory${datasource.authMethod}/metric/v2.0${datasource.workspace}/runs/${runId}/sample`;\r\n            const response = await getBackendSrv().datasourceRequest({\r\n                url: path,\r\n                headers: this.headers,\r\n                method: 'POST',\r\n                requestId: Date.now().toString(),\r\n                data: JSON.stringify({ metricName: query.metricName })\r\n            });\r\n            return response.data.value;\r\n        } catch (err) {\r\n            console.warn(err);\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    public static async getNewToken(datasource: AzureMLDataSource): Promise<string> {\r\n        const run_info = datasource.instanceSettings.jsonData.targetRuns![0]\r\n        try {\r\n            const path = `${datasource.baseUrl}/runhistory${datasource.authMethod}/history/v1.0${datasource.workspace}/experimentids/${run_info.experiment}/runs/${run_info.run}/token`;\r\n            const response = await getBackendSrv().datasourceRequest({\r\n                url: path,\r\n                headers: this.headers,\r\n                method: 'GET',\r\n                requestId: Date.now().toString(),\r\n            });\r\n            return response.data.token;\r\n        } catch (err) {\r\n            console.warn(err);\r\n            return \"\";\r\n        }\r\n    }\r\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","import { DataSourcePlugin } from '@grafana/data';\r\nimport { AzureMLDataSource } from './AzureMLDataSource';\r\nimport { ConfigEditor } from './ConfigEditor';\r\nimport { QueryEditor } from './QueryEditor';\r\nimport { AzureMLRunQuery, AzureMLDataSourceJsonData } from 'types';\r\n\r\nexport const plugin = new DataSourcePlugin<AzureMLDataSource, AzureMLRunQuery, AzureMLDataSourceJsonData>(AzureMLDataSource)\r\n  .setConfigEditor(ConfigEditor)\r\n  .setQueryEditor(QueryEditor);\r\n","import {\r\n  DataQueryRequest,\r\n  DataQueryResponse,\r\n  DataSourceApi,\r\n  DataSourceInstanceSettings,\r\n  MutableDataFrame,\r\n  FieldType,\r\n  SelectableValue,\r\n} from '@grafana/data';\r\n\r\nimport { RunHistoryClient } from './utils/RunHistoryClient';\r\nimport { AzureMLRunQuery, AzureMLDataSourceJsonData, AuthOption, DATASOURCE_RETRY_TIME, ITargetRunInfo } from './types';\r\nimport { getBackendSrv } from '@grafana/runtime';\r\n\r\nconst AUTH_REFRESH_PERIOD = 30 * 60 * 1000 // 30 minutes\r\n\r\n\r\nexport class AzureMLDataSource extends DataSourceApi<AzureMLRunQuery, AzureMLDataSourceJsonData> {\r\n  public subscriptionId?: string;\r\n  public authMethod: AuthOption;\r\n  public baseUrl: string;\r\n  public workspace?: string;\r\n  public targetRuns?: ITargetRunInfo[];\r\n\r\n  constructor(public instanceSettings: DataSourceInstanceSettings<AzureMLDataSourceJsonData>) {\r\n    super(instanceSettings);\r\n    this.subscriptionId = instanceSettings.jsonData.subscriptionId;\r\n    this.authMethod = instanceSettings.jsonData.authMethod;\r\n    this.baseUrl = instanceSettings.url || '';\r\n    this.workspace = instanceSettings.jsonData.workspace;\r\n    this.targetRuns\r\n    if (instanceSettings.jsonData.datasourceType === \"runtoken\" && \r\n      instanceSettings.jsonData.targetRuns && \r\n      instanceSettings.jsonData.targetRuns.length > 0) {\r\n      // set initial run and experiments to the logged runs\r\n      this.targetRuns = instanceSettings.jsonData.targetRuns\r\n      // refresh imediately \r\n      this.refreshToken();\r\n      // refresh occasionally\r\n      setInterval(async () => {\r\n        await this.refreshToken();\r\n      }, AUTH_REFRESH_PERIOD)\r\n    }\r\n  }\r\n\r\n  private async refreshToken() {\r\n    const token = await RunHistoryClient.getNewToken(this)\r\n    const newBody = await getBackendSrv()\r\n      .get(`/api/datasources/${this.instanceSettings.id}`)\r\n    newBody[\"secureJsonData\"] = {\"authToken\": token}\r\n    getBackendSrv()\r\n      .put(`/api/datasources/${this.instanceSettings.id}`, newBody)\r\n  }\r\n\r\n  private hasRequiredParameters(target: AzureMLRunQuery): boolean {\r\n    return !!target.runs && !!target.metricName;\r\n  }\r\n\r\n  /**\r\n   * Accepts a query from the user, retrieves the data from an external database,\r\n   * and returns the data in a format that Grafana recognizes.\r\n   * @param options\r\n   */\r\n  async query(options: DataQueryRequest<AzureMLRunQuery>): Promise<DataQueryResponse> {\r\n\r\n    const data = await Promise.all(options.targets.map(async (target) => {\r\n      if (!this.hasRequiredParameters(target)) {\r\n        return [];\r\n      }\r\n\r\n      return await Promise.all(target.runs.map(async (run) => {\r\n        const frame = new MutableDataFrame({\r\n          refId: target.refId,\r\n          name: run.label,\r\n          fields: [\r\n            { name: 'time', type: FieldType.time },\r\n            { name: target.metricName, type: FieldType.number }\r\n          ],\r\n        });\r\n        let metricValues: any[] = [];\r\n        try {\r\n          metricValues = await RunHistoryClient.fetchData(this, target, run.value!);\r\n        } catch (err) {\r\n          if (err.status !== undefined) {\r\n            if (err.status === 404) {\r\n              // Not found, set to empty array\r\n              return;\r\n            }\r\n            if (err.status === 401) {\r\n              throw Error('Authentication failed. Please reset authentication credentials.');\r\n            }\r\n            if (err.status === 502) {\r\n              throw Error('Proxy request failed. Please reset the datasource.');\r\n            }\r\n            throw err;\r\n          }\r\n        }\r\n\r\n        // Grabbing metric values and adding to the data frame:\r\n        if (metricValues.length === 0) {\r\n          return\r\n        }\r\n\r\n        metricValues.forEach(value => {\r\n            frame.add({\r\n              time: +new Date(value.createdUtc),\r\n              [target.metricName]: value.data[target.metricName]\r\n            });\r\n        });\r\n        return frame;\r\n      }));\r\n    }));\r\n\r\n    const flattendData = data.flat().filter(x => x !== undefined);\r\n\r\n    if (!flattendData || flattendData.length === 0) {\r\n      return {data: []};\r\n    }\r\n\r\n    return { data: flattendData };\r\n  }\r\n\r\n  private async testExperiment(retryCount = 0): Promise<SelectableValue[]> {\r\n    try {\r\n      const { experiments } = await RunHistoryClient.fetchExperiments(this);\r\n      return experiments;\r\n    } catch (err) {\r\n      if (retryCount > 0) {\r\n        // changes to the settings do not seem to be set immediately on the proxy server,\r\n        // so updating the workspace/discoveryUrl  may not be applied to the run history route\r\n        // needed for validation. Try after a brief timeout.\r\n        return await new Promise((resolve) => setTimeout(() => {\r\n          resolve(this.testExperiment(retryCount - 1));\r\n        }, DATASOURCE_RETRY_TIME));\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Implements a health check for the data source. Grafana calls this method whenever the users save the configuration settings.\r\n   * Used during set-up to make sure 1) the connection has been established and that 2) the authentication has been successful.\r\n   */\r\n  async testDatasource(): Promise<{status: string, message: string}> {\r\n    try {\r\n      const experiments = await this.testExperiment(1);\r\n      if (experiments.length === 0) {\r\n        return {\r\n          status: 'success',\r\n          message: 'Updated. Workspace is empty.',\r\n        };\r\n      }\r\n      return {\r\n        status: 'success',\r\n        message: 'Success',\r\n      };\r\n    } catch (err) {\r\n      console.log(this.instanceSettings)\r\n      if (err.status !== undefined) {\r\n        if (err.status === 401) {\r\n          return {\r\n            status: 'error',\r\n            message: 'Authentication failed. Reset auth credentials.'\r\n          }\r\n        }\r\n        if (err.status >= 500) {\r\n          const statusText = err.statusText !== undefined ? JSON.stringify(err.statusText) : \"unknown\"\r\n          return {\r\n            status: 'error',\r\n            message: 'Service error: ' + statusText\r\n          }\r\n        }\r\n      }\r\n      return {\r\n        status: 'error',\r\n        message: 'Unexpected error : ' + JSON.stringify(err)\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import CSS from 'csstype';\r\n\r\n/* Inline styles rather than CSS - every React HTML element has a style property that allows an object with styling. */\r\n\r\n\r\n// Time Picker\r\n\r\nexport const timePickerContainer: CSS.Properties = {\r\n    width: '50%',\r\n    marginBottom: '-10px'\r\n};\r\n\r\nexport const h2: CSS.Properties = {\r\n    fontSize: '16px',\r\n    fontWeight: 500,\r\n    lineHeight: '1.25',\r\n    maxWidth: '480px'\r\n};\r\n\r\nexport const h3: CSS.Properties = {\r\n    fontSize: '14px',\r\n    fontWeight: 300,\r\n    lineHeight: '1.25',\r\n    maxWidth: '480px',\r\n    marginTop: '5px'\r\n};\r\n\r\nexport const horizDivForTimePicker: CSS.Properties = {\r\n    height: '.25px',\r\n    background: '#2a6cd1',\r\n    borderTop: '#2a6cd1',\r\n    textAlign: 'right',\r\n    margin: '0',\r\n    width: '56%'\r\n};\r\n\r\nexport const timePicker: CSS.Properties = {\r\n    marginLeft: '58%',\r\n    marginTop: '-7px'\r\n};\r\n\r\nexport const timePickerLabel: CSS.Properties = {\r\n    fontWeight: 'lighter',\r\n    color: '#2a6cd1'\r\n};","export const CLIENT_CREDENTIAL_ROUTE = \"clientcred\";\r\nexport const AUTH_TOKEN_ROUTE = \"authtoken\";\r\nexport const SELECT_ALL_LABEL = \"-- Select All  --\";\r\nexport const DATASOURCE_RETRY_TIME = 4000;\r\nexport const MAX_QUERY_RUNS = 200;\r\n","import { SelectableValue } from '@grafana/data';\r\n\r\n\r\n/* Type info for run filters */\r\n\r\n\r\nexport interface IFilter {\r\n    displayString: string;\r\n    filterProps: IFilterProps[];\r\n}\r\n\r\nexport interface IFilterProps {\r\n    field: string;\r\n    operator: string;\r\n    values: any[];\r\n}\r\n\r\nexport interface IPropertyDetails {\r\n    options: SelectableValue[],\r\n    type: PropertyType,\r\n    queryPath: string,\r\n    allowedValues?: SelectableValue[]\r\n}\r\n\r\nexport enum PropertyType {\r\n    number,\r\n    date,\r\n    string,\r\n    tag\r\n}\r\n\r\nexport enum RunProperties {\r\n    number = \"Run number\",\r\n    targetName = \"Target name\",\r\n    runType = \"Run type\",\r\n    status = \"Status\",\r\n    createdDate = \"Created time\",\r\n    tags = \"Tags\",\r\n    createdBy = \"Created by\"\r\n}\r\n\r\nexport enum FilterOperations {\r\n    equals = \"eq\",\r\n    lessThan = \"lt\",\r\n    notEqual = \"ne\",\r\n    greaterThan = \"gt\",\r\n    lessOrEqual = 'le',\r\n    greaterOrEqual = \"ge\"\r\n}\r\n\r\n/**\r\n * Common filter operators used for numerical fields\r\n */\r\nexport const numericOperations: SelectableValue[] = [\r\n    {\r\n        label: \"==\",\r\n        value: FilterOperations.equals\r\n    },\r\n    {\r\n        label: \"!=\",\r\n        value: FilterOperations.notEqual\r\n    },\r\n    {\r\n        label: \"<\",\r\n        value: FilterOperations.lessThan\r\n    },\r\n    {\r\n        label: \">\",\r\n        value: FilterOperations.greaterThan\r\n    },\r\n    {\r\n        label: \"<=\",\r\n        value: FilterOperations.lessOrEqual\r\n    },\r\n    {\r\n        label: \">=\",\r\n        value: FilterOperations.greaterOrEqual\r\n    }\r\n];\r\n\r\n/**\r\n* Common filter operators used for datetime fields\r\n* NOTE: Not all the dateFieldOperations are being used (only the >= and <= ops are used) because TimeRangePicker requires that users select both a before and after value. Rather than direct input of \"before\" or \"after\" a certain time, we let users choose a range which may be more intuitive to use.\r\n*/\r\nexport const dateFieldOperations: SelectableValue[] = [\r\n    {\r\n        label: \"After\",\r\n        value: FilterOperations.greaterThan\r\n    },\r\n    {\r\n        label: \"On date or after\",\r\n        value: FilterOperations.greaterOrEqual\r\n    },\r\n    {\r\n        label: \"Before\",\r\n        value: FilterOperations.lessThan\r\n    },\r\n    {\r\n        label: \"On date or before\",\r\n        value: FilterOperations.lessOrEqual\r\n    }\r\n];\r\n\r\n/*\r\n * Run configuration types from azureml.core.Run (https://docs.microsoft.com/en-us/python/api/azureml-core/azureml.core.run(class)?view=azure-ml-py)\r\n */\r\nexport const runTypeValueOptions: SelectableValue[] = [\r\n    { label: \"Automated ML\", value: \"Automated ML\" },\r\n    { label: \"Hyperdrive\", value: \"Hyperdrive\" },\r\n    { label: \"Pipeline\", value: \"Pipeline\" },\r\n    { label: \"Pipeline Step\", value: \"Pipeline step\" },\r\n    { label: \"Script\", value: \"Script\" }\r\n]\r\n\r\n/*\r\n * Run statuses from azureml.core.run.Run get_status() (https://docs.microsoft.com/en-us/python/api/azureml-core/azureml.core.run.run?view=azure-ml-py#get-status--)\r\n */\r\nexport const statusValueOptions: SelectableValue[] = [\r\n    { label: \"Cancel Requested\", value: \"Cancel requested\" },\r\n    { label: \"Canceled\", value: \"Canceled\" },\r\n    { label: \"Completed\", value: \"Completed\" },\r\n    { label: \"Failed\", value: \"Failed\" },\r\n    { label: \"Finalizing\", value: \"Finalizing\" },\r\n    { label: \"Not Responding\", value: \"Not responding\" },\r\n    { label: \"Not Started\", value: \"Not started\" },\r\n    { label: \"Preparing\", value: \"Preparing\" },\r\n    { label: \"Provisioning\", value: \"Provisioning\" },\r\n    { label: \"Queued\", value: \"Queued\" },\r\n    { label: \"Running\", value: \"Running\" },\r\n    { label: \"Starting\", value: \"Starting\" },\r\n    { label: \"Succeeded\", value: \"Succeeded\" },\r\n    { label: \"Timed Out\", value: \"Timed out\" }\r\n]\r\n\r\n/**\r\n * Common filter operators used for tag fields\r\n */\r\nexport const tagOperations: SelectableValue[] = [\r\n    {\r\n        label: \"key is defined\",\r\n        value: FilterOperations.notEqual\r\n    }, \r\n    {\r\n        label: \"key == value\",\r\n        value: FilterOperations.equals\r\n    }\r\n];\r\n\r\n/**\r\n * Common filter operators used for string fields\r\n */\r\nexport const stringOperations: SelectableValue[] = [\r\n    {\r\n        label: \"==\",\r\n        value: FilterOperations.equals\r\n    },\r\n    {\r\n        label: \"!=\",\r\n        value: FilterOperations.notEqual\r\n    }\r\n];\r\n\r\nexport const propertyDetailsDict: { [key: string]: IPropertyDetails } = {\r\n    [RunProperties.number]: {\r\n        options: numericOperations,\r\n        type: PropertyType.number,\r\n        queryPath: \"properties/runNumber\"\r\n    },\r\n    [RunProperties.runType]: {\r\n        options: stringOperations,\r\n        type: PropertyType.string,\r\n        queryPath: \"properties/runType\",\r\n        allowedValues: runTypeValueOptions\r\n    },\r\n    [RunProperties.targetName]: {\r\n        options: stringOperations,\r\n        type: PropertyType.string,\r\n        queryPath: \"properties/targetName\"\r\n    },\r\n    [RunProperties.createdDate]: {\r\n        options: [dateFieldOperations],\r\n        type: PropertyType.date,\r\n        queryPath: \"properties/creationContext/createdTime\"\r\n    },\r\n    [RunProperties.createdBy]: {\r\n        options: stringOperations,\r\n        type: PropertyType.string,\r\n        queryPath: \"properties/creationContext/createdBy/userName\"\r\n    },\r\n    [RunProperties.tags]: {\r\n        options: tagOperations,\r\n        type: PropertyType.tag,\r\n        queryPath: \"annotations/tags/\"\r\n    },\r\n    [RunProperties.status]: {\r\n        options: stringOperations,\r\n        type: PropertyType.string,\r\n        queryPath: \"annotations/status\",\r\n        allowedValues: statusValueOptions\r\n    },\r\n};\r\n\r\nexport const propertiesOptions: SelectableValue[] = [\r\n    {\r\n        label: RunProperties.createdBy,\r\n        value: RunProperties.createdBy\r\n    }, \r\n    {\r\n        label: RunProperties.createdDate,\r\n        value: RunProperties.createdDate\r\n    }, \r\n    {\r\n        label: RunProperties.number,\r\n        value: RunProperties.number\r\n    }, \r\n    {\r\n        label: RunProperties.runType,\r\n        value: RunProperties.runType\r\n    }, \r\n    {\r\n        label: RunProperties.status,\r\n        value: RunProperties.status\r\n    }, \r\n    {\r\n        label: RunProperties.targetName,\r\n        value: RunProperties.targetName\r\n    }, \r\n    {\r\n        label: RunProperties.tags,\r\n        value: RunProperties.tags\r\n    }\r\n];\r\n\r\n","import React, { ChangeEvent, PureComponent } from 'react';\r\nimport { Select, Legend, Input, Button, InlineFormLabel, Field } from '@grafana/ui';\r\nimport {\r\n  SelectableValue,\r\n  DataSourcePluginOptionsEditorProps,\r\n  updateDatasourcePluginOption,\r\n  updateDatasourcePluginJsonDataOption,\r\n  updateDatasourcePluginSecureJsonDataOption,\r\n  onUpdateDatasourceResetOption,\r\n} from '@grafana/data';\r\nimport { RunHistoryClient } from './utils/RunHistoryClient';\r\nimport { getBackendSrv } from '@grafana/runtime';\r\nimport { AzureMLDataSourceJsonData, AzureMLSecureJsonData, CLIENT_CREDENTIAL_ROUTE } from 'types';\r\n\r\nexport interface Props extends DataSourcePluginOptionsEditorProps<AzureMLDataSourceJsonData, AzureMLSecureJsonData> {\r\n\r\n}\r\n\r\ninterface State {\r\n  subscriptions?: SelectableValue[];\r\n  workspaces?: SelectableValue[];\r\n  loadingWorkspaceDetails: boolean;\r\n  loadResourcesError: string | undefined;\r\n}\r\n\r\nexport class ConfigEditor extends PureComponent<Props, State> {\r\n  authOptions = [\r\n    {\r\n      label: \"Client credentials\",\r\n      value: CLIENT_CREDENTIAL_ROUTE\r\n    }];\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      subscriptions: [],\r\n      workspaces: [],\r\n      loadingWorkspaceDetails: false,\r\n      loadResourcesError: undefined\r\n    };\r\n    if (this.props.options.id) {\r\n      updateDatasourcePluginOption(this.props as any, 'url', '/api/datasources/proxy/' + this.props.options.id);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.options.jsonData.datasourceType !== 'runtoken') {\r\n      this.loadSubscriptionsAndWorkspaces();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (prevProps.options.jsonData.subscriptionId !== this.props.options.jsonData.subscriptionId) {\r\n      this.loadWorkspaces();\r\n    }\r\n  }\r\n\r\n  onAuthChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    updateDatasourcePluginSecureJsonDataOption(this.props, 'authToken', event.target.value);\r\n    this.setState({loadResourcesError: undefined});\r\n  }\r\n\r\n  onAuthRouteChange = (selection: SelectableValue) => {\r\n    updateDatasourcePluginJsonDataOption(this.props, 'authMethod', selection.value);\r\n  }\r\n\r\n  onClientSecretChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    updateDatasourcePluginSecureJsonDataOption(this.props, 'clientSecret', event.target.value);\r\n    this.setState({loadResourcesError: undefined});\r\n  };\r\n\r\n  onSubscriptionSelected = (selection: any) => {\r\n    const {options} = this.props;\r\n    this.props.onOptionsChange({\r\n      ...options,\r\n      jsonData: {\r\n        ...options.jsonData,\r\n        workspace: undefined,\r\n        subscriptionId: selection.value\r\n      }\r\n    });\r\n  }\r\n\r\n  onWorkspaceSelected = (selection: any) => {\r\n    this.setState({loadingWorkspaceDetails: true}, async () => {\r\n      const discoveryUrls = await RunHistoryClient.getDiscoveryUrls(\r\n        '/api/datasources/proxy/' + this.props.options.id,\r\n        this.props.options.jsonData.authMethod,\r\n        selection.value\r\n      );\r\n      const runHistoryUrl = discoveryUrls[\"history\"].replace('https://', '');\r\n      const apiUrl = discoveryUrls[\"api\"].replace('https://', '');\r\n      const {options} = this.props\r\n      this.props.onOptionsChange({\r\n        ...options,\r\n        jsonData: {\r\n          ...options.jsonData,\r\n          workspace: selection.value,\r\n          runHistoryUrl,\r\n          apiUrl\r\n        }\r\n      });\r\n      await getBackendSrv()\r\n        .put(`/api/datasources/${this.props.options.id}`, this.props.options)\r\n        .then((result) => {\r\n          updateDatasourcePluginOption(this.props as any, 'version', result.version);\r\n      });\r\n      this.setState({loadingWorkspaceDetails: false});\r\n    });\r\n  }\r\n\r\n  onTenantIdChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    updateDatasourcePluginJsonDataOption(this.props, 'tenantId', event.target.value);\r\n  };\r\n\r\n  onClientIdChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    updateDatasourcePluginJsonDataOption(this.props, 'clientId', event.target.value);\r\n  };\r\n\r\n  hasNecessaryCredentials = () => {\r\n    if (this.props.options.jsonData.authMethod === 'clientcred') {\r\n      if (!this.props.options.secureJsonFields?.clientSecret && !this.props.options.secureJsonData?.clientSecret) {\r\n        return false;\r\n      }\r\n      if (!this.props.options.jsonData.clientId || !this.props.options.jsonData.tenantId) {\r\n        return false;\r\n      }\r\n    } else {\r\n      if (!this.props.options.secureJsonFields?.authToken && !this.props.options.secureJsonData?.authToken) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  loadSubscriptionsAndWorkspaces = async () => {\r\n    await this.loadSubscriptions();\r\n    this.loadWorkspaces();\r\n  }\r\n\r\n  loadSubscriptions = async () => {\r\n    await getBackendSrv()\r\n      .put(`/api/datasources/${this.props.options.id}`, this.props.options)\r\n      .then((result) => {\r\n        updateDatasourcePluginOption(this.props as any, 'version', result.version);\r\n    });\r\n    if (this.hasNecessaryCredentials()) {\r\n      this.setState({subscriptions: undefined}, async () => {\r\n        const baseUrl = '/api/datasources/proxy/' + this.props.options.id;\r\n        try {\r\n          const subscriptions = await RunHistoryClient.fetchSubscriptions(baseUrl, this.props.options.jsonData.authMethod);\r\n          this.setState({subscriptions, loadResourcesError: undefined });\r\n          if (this.props.options.jsonData.subscriptionId === undefined) {\r\n            updateDatasourcePluginJsonDataOption(this.props, 'subscriptionId', subscriptions[0].value);\r\n          }\r\n        } catch (err) {\r\n          if (err.status === 401) {\r\n            this.setState({loadResourcesError: \"Authorization failed, cannot load subscriptions\"})\r\n          } else {\r\n            this.setState({loadResourcesError: JSON.stringify(err)})\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  loadWorkspaces = () => {\r\n    const subscriptionId = this.props.options.jsonData.subscriptionId;\r\n    if (this.hasNecessaryCredentials() && subscriptionId !== undefined) {\r\n      this.setState({workspaces: undefined}, async () => {\r\n        const baseUrl = '/api/datasources/proxy/' + this.props.options.id;\r\n        try {\r\n          const workspaces = await RunHistoryClient.fetchWorkspaces(baseUrl, this.props.options.jsonData.authMethod, subscriptionId);\r\n          this.setState({ workspaces, loadResourcesError: undefined });\r\n          const selectedWsId = this.props.options.jsonData.workspace\r\n          if (selectedWsId === undefined || workspaces.find(ws => ws.value === selectedWsId) === undefined) {\r\n            this.onWorkspaceSelected(workspaces[0])\r\n          }\r\n        } catch (err) {\r\n          if (err.status === 401) {\r\n            this.setState({loadResourcesError: \"Authorization failed, cannot load workspaces\", workspaces: []})\r\n          } else {\r\n            this.setState({loadResourcesError: JSON.stringify(err), workspaces: []})\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  renderRunTokenPage = (): React.ReactNode => {\r\n    return (<>\r\n      <Legend>Azure Machine Learning Metrics</Legend>\r\n      <div>This data source was generated using the AzureML SDK, and can not be further configured. If the authorization has expired, it can be refreshed by re-submitting using the SDK. Additional refresh options are being developed.</div>\r\n    </>);\r\n  }\r\n\r\n  render() {\r\n    const { options } = this.props;\r\n\r\n    options.jsonData.authMethod = options.jsonData.authMethod || CLIENT_CREDENTIAL_ROUTE;\r\n    options.secureJsonData = (options.secureJsonData || {}) as AzureMLSecureJsonData;\r\n    const clientSecretConfigured = options.secureJsonFields?.clientSecret;\r\n    const authTokenConfigured = options.secureJsonFields?.authToken;\r\n    const hasNecessaryCredentials = this.hasNecessaryCredentials();\r\n\r\n    if (options.jsonData.datasourceType === 'runtoken') {\r\n      return this.renderRunTokenPage();\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Legend>Azure Machine Learning Metrics</Legend>\r\n        <div className=\"gf-form-group\">\r\n          {options.jsonData.authMethod === 'clientcred' && \r\n          <>\r\n          <div className=\"gf-form-inline\">\r\n            <div className=\"gf-form\">\r\n            <InlineFormLabel className=\"width-12\">\r\n              Directory (tenant) ID\r\n            </InlineFormLabel>\r\n            <div className=\"width-15\">\r\n              <Input\r\n                className=\"width-30\"\r\n                placeholder=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"\r\n                value={this.props.options.jsonData.tenantId}\r\n                onChange={this.onTenantIdChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            <InlineFormLabel className=\"width-12\">\r\n              Application (client) ID\r\n            </InlineFormLabel>\r\n            <div className=\"width-15\">\r\n              <Input\r\n                className=\"width-30\"\r\n                placeholder=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"\r\n                value={this.props.options.jsonData.clientId}\r\n                onChange={this.onClientIdChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"gf-form-inline\">\r\n          <div className=\"gf-form\">\r\n            {clientSecretConfigured ? (\r\n              <div className=\"gf-form-inline\">\r\n                <div className=\"gf-form\">\r\n                  <InlineFormLabel className=\"width-12\">Client Secret</InlineFormLabel>\r\n                  <Input \r\n                    className=\"width-25\" \r\n                    placeholder=\"configured\" \r\n                    disabled={true} \r\n                    invalid={this.state.loadResourcesError !== undefined}/>\r\n                </div>\r\n                <div className=\"gf-form\">\r\n                  <div className=\"max-width-30 gf-form-inline\">\r\n                    <Button \r\n                      variant={this.state.loadResourcesError ? \"destructive\" : \"secondary\"} \r\n                      type=\"button\" \r\n                      onClick={onUpdateDatasourceResetOption(this.props as any, 'clientSecret')}>\r\n                      reset\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"gf-form-inline\">\r\n                <div className=\"gf-form\">\r\n                  <InlineFormLabel className=\"width-12\">\r\n                    Client Secret\r\n                  </InlineFormLabel>\r\n                  <Field className=\"width-15\"\r\n                    invalid={this.state.loadResourcesError !== undefined}\r\n                    error={this.state.loadResourcesError}\r\n                  >\r\n                    <Input\r\n                      className=\"width-30\"\r\n                      placeholder=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"\r\n                      value={options.secureJsonData.clientSecret || ''}\r\n                      onChange={this.onClientSecretChange}\r\n                    />\r\n                  </Field>\r\n                </div>\r\n              </div>\r\n            )}\r\n            </div>\r\n            </div>\r\n            </>\r\n          }\r\n          {options.jsonData.authMethod === 'authtoken' && \r\n          <div className=\"gf-form\">\r\n            {authTokenConfigured ? (\r\n            <div className=\"gf-form-inline\">\r\n              <div className=\"gf-form\">\r\n                <InlineFormLabel className=\"width-12\">Authorization Token</InlineFormLabel>\r\n                <Input\r\n                  className=\"width-25\"\r\n                  placeholder=\"configured\"\r\n                  disabled={true} \r\n                  invalid={this.state.loadResourcesError !== undefined}/>\r\n              </div>\r\n              <div className=\"gf-form\">\r\n                <div className=\"max-width-30 gf-form-inline\">\r\n                  <Button \r\n                    variant={this.state.loadResourcesError ? \"destructive\" : \"secondary\"}\r\n                    type=\"button\"\r\n                    onClick={onUpdateDatasourceResetOption(this.props as any, 'authToken')}\r\n                  >\r\n                    reset\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"gf-form-inline\">\r\n              <div className=\"gf-form\">\r\n                <InlineFormLabel className=\"width-12\">Authorization Token</InlineFormLabel>\r\n                  <Field className=\"width-15\"\r\n                    invalid={this.state.loadResourcesError !== undefined}\r\n                    error={this.state.loadResourcesError}\r\n                  >\r\n                  <Input\r\n                    className=\"width-30\"\r\n                    placeholder=\"XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\"\r\n                    value={options.secureJsonData.authToken || ''}\r\n                    onChange={this.onAuthChange}\r\n                  />\r\n                </Field>\r\n              </div>\r\n            </div>\r\n          )}\r\n          </div>}\r\n          <div className=\"gf-form-inline\">\r\n            <div className=\"gf-form\">\r\n              <InlineFormLabel className=\"width-12\">Default Subscription</InlineFormLabel>\r\n              <div className=\"width-25\">\r\n                <Select\r\n                  className=\"width-30\"\r\n                  value={options.jsonData.subscriptionId}\r\n                  options={this.state.subscriptions}\r\n                  onChange={this.onSubscriptionSelected}\r\n                  placeholder=\"Select Subscription\"\r\n                  isLoading={this.state.subscriptions === undefined}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"gf-form-inline\">\r\n            <div className=\"gf-form\">\r\n              <div className=\"max-width-30 gf-form-inline\">\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  size=\"sm\"\r\n                  type=\"button\"\r\n                  onClick={this.loadSubscriptionsAndWorkspaces}\r\n                  disabled={!hasNecessaryCredentials}\r\n                >\r\n                  Load Subscriptions\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"gf-form-inline\" style={{width: 300}}>\r\n            <div className=\"gf-form\">\r\n              <InlineFormLabel className=\"width-12\">Workspace</InlineFormLabel>\r\n              <div className=\"width-25\">\r\n                <Select\r\n                  key={options.jsonData.subscriptionId}\r\n                  className=\"width-30\"\r\n                  value={options.jsonData.workspace}\r\n                  options={this.state.workspaces}\r\n                  onChange={this.onWorkspaceSelected}\r\n                  placeholder=\"Select Workspace\"\r\n                  isLoading={this.state.workspaces === undefined}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {this.state.loadingWorkspaceDetails && \r\n            <div className=\"gf-form-inline\" style={{width: 300}}>\r\n              <InlineFormLabel className=\"width-12\">Loading details...</InlineFormLabel>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport React, { PureComponent, ChangeEvent } from 'react';\r\nimport { Select, Field, MultiSelect, Checkbox, Label, AsyncMultiSelect } from '@grafana/ui';\r\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\r\nimport { AzureMLDataSource } from './AzureMLDataSource';\r\nimport { RunHistoryClient } from 'utils/RunHistoryClient';\r\nimport { FilterControl } from 'controls/FilterControl';\r\nimport { AzureMLRunQuery, AzureMLDataSourceJsonData, SelectableRun, IFilter, SELECT_ALL_LABEL, h2, h3 } from 'types';\r\n\r\n\r\ntype Props = QueryEditorProps<AzureMLDataSource, AzureMLRunQuery, AzureMLDataSourceJsonData>;\r\n\r\ninterface State {\r\n  experiments?: SelectableValue<string>[];\r\n  runs?: SelectableRun[];\r\n  metrics?: SelectableValue[];\r\n  showRunCountWarning: boolean;\r\n  showExperimentCountWarning: boolean;\r\n}\r\n\r\nexport class QueryEditor extends PureComponent<Props, State> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      experiments: [],\r\n      runs: [],\r\n      metrics: [],\r\n      showExperimentCountWarning: false,\r\n      showRunCountWarning: false\r\n    };\r\n    this.loadFilteredExperiments = this.loadFilteredExperiments.bind(this)//_.debounce(this.loadFilteredExperiments.bind(this), 300);\r\n  }\r\n\r\n  private static allExperimentsKey = 'AllExperiments';\r\n  private static allRunsKey = 'AllRuns';\r\n\r\n  componentDidMount() {\r\n    // populate selection to the runs set via the SDK\r\n    if (this.props.datasource.targetRuns !== undefined) {\r\n      this.initByTargetRuns();\r\n    }\r\n    else {\r\n      const { onChange, query } = this.props;\r\n      onChange({\r\n        ...query,\r\n        runs: [],\r\n        experiments: []\r\n      });\r\n    }\r\n    this.fetchRuns();\r\n    if (this.props.query.runs) {\r\n      this.fetchMetrics();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (this.props.query.experiments !== prevProps.query.experiments ||\r\n      this.props.query.runFilters !== prevProps.query.runFilters ||\r\n      this.props.query.listChildRuns !== prevProps.query.listChildRuns) {\r\n      this.fetchRuns();\r\n    }\r\n    if (this.props.query.runs !== prevProps.query.runs) {\r\n      this.fetchMetrics();\r\n      if (this.props.query.metricName) {\r\n        this.props.onRunQuery();\r\n      }\r\n    }\r\n  }\r\n\r\n  private initByTargetRuns(): void {\r\n    if (this.props.datasource.targetRuns !== undefined) {\r\n      const expDict: {[key: string]: string} = {};\r\n      this.props.datasource.targetRuns.forEach(runItem => {\r\n        if (expDict[runItem.experiment] === undefined) {\r\n          expDict[runItem.experiment] = runItem.experimentName\r\n        }\r\n      });\r\n      const experiments: SelectableValue[string] = Object.keys(expDict).map(expId => {\r\n        return {\r\n          label: expDict[expId],\r\n          value: expId\r\n        }\r\n      });\r\n      const selectedRuns = this.props.datasource.targetRuns.map(runInfo => {\r\n        return {\r\n          label: runInfo.label,\r\n          experimentId: runInfo.experiment,\r\n          value: runInfo.run\r\n        }\r\n      });\r\n      const { onChange, query } = this.props;\r\n      onChange({\r\n        ...query,\r\n        experiments,\r\n        runs: selectedRuns\r\n      });\r\n    }\r\n  }\r\n\r\n  private async fetchRuns(): Promise<void> {\r\n    this.setState({ runs: undefined, metrics: [] }, async () => {\r\n      const {runs, continuationToken} = await RunHistoryClient.fetchRunsFromIndexService(this.props.datasource, this.props.query);\r\n      // Keep all runs that are selected but no longer match filters\r\n      // to enable user building heterogeneus collections\r\n      const selectedRuns = this.props.query.runs || [];\r\n      const retainedRuns = selectedRuns.filter(run => {\r\n        return !runs.some(runOption => runOption.value === run.value)\r\n      })\r\n      this.setState({\r\n        runs: runs.concat(retainedRuns),\r\n        metrics: [],\r\n        showRunCountWarning: !!continuationToken\r\n      });\r\n    });\r\n  }\r\n\r\n  private async fetchMetrics(): Promise<void> {\r\n    this.setState({ metrics: undefined }, async () => {\r\n      const selectedRuns = this.props.query.runs || [];\r\n      const expDict: {[key: string]: string[]} = {};\r\n      selectedRuns.forEach(run => {\r\n        if (expDict[run.experimentId] === undefined) {\r\n          expDict[run.experimentId] = [];\r\n        }\r\n        expDict[run.experimentId].push(run.value!)\r\n      });\r\n\r\n      const promises = Object.entries(expDict).map(([expId, runIds]) => {\r\n        return RunHistoryClient.fetchMetrics(this.props.datasource, this.props.query, expId, runIds);\r\n      });\r\n      const metricArray = await Promise.all(promises);\r\n      const metrics = _.uniq(metricArray.flat())\r\n        .sort()\r\n        .map(label => {return { label, value: label};});\r\n      this.setState({metrics});\r\n    });\r\n  }\r\n\r\n  private async loadFilteredExperiments(input: string): Promise<SelectableValue[]> {\r\n    const {experiments, continuationToken} = await RunHistoryClient.fetchExperiments(this.props.datasource, input);\r\n    this.setState({\r\n      showExperimentCountWarning: !!continuationToken,\r\n      experiments: [...experiments]\r\n    });\r\n    if (experiments !== undefined &&\r\n      (this.props.query.experiments === undefined ||\r\n        experiments.some(exp => {\r\n           return (this.props.query.experiments.indexOf(exp.value) == -1);\r\n        })\r\n      )\r\n    ) {\r\n      experiments.unshift(\r\n        {\r\n          label: SELECT_ALL_LABEL,\r\n          value: QueryEditor.allExperimentsKey\r\n        }\r\n      );\r\n    }\r\n    return experiments;\r\n  }\r\n\r\n  getLabel = (option) => {\r\n    return option.name;\r\n  }\r\n\r\n  getValue = (option) => {\r\n    return option.id\r\n  }\r\n\r\n  onExperimentSelected = (selection: SelectableValue[]) => {\r\n    const { onChange, query } = this.props;\r\n    if (selection.findIndex(exp => exp.value === QueryEditor.allExperimentsKey) !== -1) {\r\n      onChange({ ...query, experiments: [...this.state.experiments!] });\r\n    } else {\r\n      onChange({\r\n        ...query,\r\n        experiments: selection\r\n      });\r\n    }\r\n  }\r\n\r\n  onFiltersUpdated = (filters: IFilter[]) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({ ...query, runFilters: filters });\r\n  };\r\n\r\n  onListChildRunsChange = (include: boolean) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({ ...query, listChildRuns: include });\r\n  }\r\n\r\n  onFilterByExperimentsChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const { onChange, query } = this.props;\r\n    onChange({\r\n      ...query,\r\n      filterByExperiments: event.currentTarget.checked,\r\n      experiments: event.currentTarget.checked ? (query.experiments || []) : []\r\n    });\r\n  }\r\n\r\n  onRunSelected = (selection: SelectableRun[]) => {\r\n    const { onChange, query } = this.props;\r\n    if (selection.findIndex(run => run.value === QueryEditor.allRunsKey) !== -1) {\r\n      onChange({ ...query, runs: [...this.state.runs] });\r\n    } else {\r\n      onChange({ ...query, runs: selection });\r\n    }\r\n    if (this.props.query.metricName) {\r\n      this.props.onRunQuery();\r\n    }\r\n  }\r\n\r\n  onMetricSelected = (selection: any) => {\r\n    const { onChange, query, onRunQuery } = this.props;\r\n    onChange({ ...query, metricName: selection.value });\r\n    onRunQuery();\r\n  }\r\n\r\n  render() {\r\n    const runOptions = this.state.runs ? [...this.state.runs] : undefined;\r\n    if (runOptions !== undefined && runOptions.length !== 0 &&\r\n      (this.props.query.runs === undefined ||\r\n        this.props.query.runs.length !== runOptions.length)\r\n    ) {\r\n      runOptions.unshift(\r\n        {\r\n          label: SELECT_ALL_LABEL,\r\n          value: QueryEditor.allRunsKey,\r\n          experimentId: \"0\"\r\n        }\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"gf-form-group\">\r\n        <Label style={h2}>Filter Runs</Label>\r\n        <div className=\"gf-form\">\r\n          <div className=\"gf-form-inline\" style={{ width: 300 }}>\r\n            <div>\r\n              <Checkbox\r\n                label=\"Filter by experiment\"\r\n                value={this.props.query.filterByExperiments}\r\n                onChange={this.onFilterByExperimentsChange}\r\n              />\r\n              {this.props.query.filterByExperiments === true ?\r\n                <div className=\"gf-form-inline\">\r\n                  <AsyncMultiSelect\r\n                    width={35}\r\n                    defaultOptions\r\n                    isClearable={true}\r\n                    // onInputChange={this.loadFilteredExperiments}\r\n                    maxVisibleValues={2}\r\n                    cacheOptions={false}\r\n                    loadOptions={this.loadFilteredExperiments}\r\n                    onChange={this.onExperimentSelected}\r\n                    placeholder=\"Select experiment\"\r\n                    value={this.props.query.experiments || []}\r\n                    // isLoading={this.state.experiments === undefined}\r\n                  ></AsyncMultiSelect>\r\n                  {this.state.showExperimentCountWarning ?\r\n                    <span>Not all experiments can be shown. Type in dropdown to refine list.</span> : <></>\r\n                  }\r\n                </div> :\r\n                <></>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <FilterControl\r\n          filters={this.props.query.runFilters || []}\r\n          includeChildRuns={this.props.query.listChildRuns}\r\n          onFiltersUpdate={this.onFiltersUpdated}\r\n          onChildRunsUpdate={this.onListChildRunsChange}\r\n        />\r\n        <div className=\"gf-form\">\r\n          <div className=\"gf-form-inline\" style={{ width: 300 }}>\r\n            <Label style={h3}>Runs</Label>\r\n            <Field\r\n              invalid={this.state.showRunCountWarning}\r\n              error={this.state.showRunCountWarning ? \"Refine filtering further. Too many runs to display.\" : undefined}>\r\n                <MultiSelect\r\n                  width={35}\r\n                  isClearable={true}\r\n                  maxVisibleValues={2}\r\n                  onChange={this.onRunSelected as any}\r\n                  options={runOptions}\r\n                  placeholder=\"Select run\"\r\n                  value={this.props.query.runs}\r\n                  isLoading={this.state.runs === undefined}\r\n                ></MultiSelect>\r\n            </Field>\r\n          </div>\r\n          <div className=\"gf-form-inline\" style={{ width: 300 }}>\r\n            <Label style={h3}>Metric</Label>\r\n            <Field>\r\n              <Select\r\n                width={35}\r\n                onChange={this.onMetricSelected}\r\n                options={this.state.metrics}\r\n                placeholder=\"Select metric\"\r\n                value={this.props.query.metricName}\r\n                isLoading={this.state.metrics === undefined}\r\n                disabled={!this.state.metrics || this.state.metrics.length === 0}\r\n              ></Select>\r\n            </Field>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","module.exports = __WEBPACK_EXTERNAL_MODULE__21__;","import React, { ChangeEvent } from 'react';\r\nimport { Button, Field, Label, Checkbox, TimeRangePicker } from '@grafana/ui';\r\nimport { SelectableValue, dateTime, TimeFragment, dateTimeForTimeZone, TimeRange } from '@grafana/data';\r\nimport { getShiftedTimeRange, getZoomedTimeRange, shiftDirections } from '../utils/timeRangePicker';\r\nimport { RunProperties, numericOperations, PropertyType, FilterOperations, propertyDetailsDict, propertiesOptions, timePicker, horizDivForTimePicker, timePickerContainer, timePickerLabel, h2, h3, IFilter } from 'types';\r\nimport { SelectField } from './SelectField';\r\nimport { InputField } from './InputField';\r\n\r\nexport interface IFilterControlProps {\r\n    filters: IFilter[];\r\n    includeChildRuns: boolean;\r\n    onFiltersUpdate: (filters: IFilter[]) => void;\r\n    onChildRunsUpdate: (include: boolean) => void;\r\n}\r\n\r\nexport interface IFilterControlState {\r\n    editorOpen: boolean;\r\n    selectedProperty: RunProperties;\r\n    operation: SelectableValue;\r\n    value?: string;\r\n    timerangeValue: TimeRange;\r\n    additionalValue?: string;\r\n    filterValidationError?: string;\r\n}\r\n\r\nexport class FilterControl extends React.PureComponent<IFilterControlProps, IFilterControlState> {\r\n    constructor(props: IFilterControlProps) {\r\n        super(props);\r\n        this.state = {\r\n            editorOpen: false,\r\n            selectedProperty: RunProperties.number,\r\n            operation: numericOperations[0],\r\n            value: undefined,\r\n            timerangeValue: {\r\n                from: dateTime().subtract(6, \"hours\"),\r\n                to: dateTime(),\r\n                raw: { from: 'now-6h' as TimeFragment, to: 'now' as TimeFragment },\r\n            }\r\n        }\r\n    }\r\n\r\n    /* On filter control editor change functions */\r\n\r\n    openEditor = () => {\r\n        this.setState({ editorOpen: true });\r\n    }\r\n\r\n    closeEditor = () => {\r\n        this.setState({ editorOpen: false, value: undefined, filterValidationError: undefined });\r\n    }\r\n\r\n    deleteFilter = (index: number) => {\r\n        const filters = [...this.props.filters];\r\n        filters.splice(index, 1);\r\n        this.props.onFiltersUpdate(filters);\r\n    }\r\n\r\n    setProperty = (selection: SelectableValue) => {\r\n        const newProp = propertyDetailsDict[selection.value];\r\n        this.setState({\r\n            selectedProperty: selection.value,\r\n            operation: newProp.options[0]\r\n        });\r\n    }\r\n\r\n    setOperation = (selection: SelectableValue) => {\r\n        this.setState({ operation: selection });\r\n    }\r\n\r\n    setSelectValue = (selection: SelectableValue) => {\r\n        this.setState({ value: selection.value });\r\n    }\r\n\r\n    setValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ value: event.target.value, filterValidationError: undefined });\r\n    }\r\n\r\n    setAdditionalValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({ additionalValue: event.target.value });\r\n    }\r\n\r\n    onChildRunsChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        this.props.onChildRunsUpdate(event.currentTarget.checked);\r\n    };\r\n\r\n    onMoveTimePicker = (direction: shiftDirections) => {\r\n        const { from, to } = getShiftedTimeRange(direction, this.state.timerangeValue);\r\n        const nextTimeRange = {\r\n            from: dateTimeForTimeZone(\"browser\", from),\r\n            to: dateTimeForTimeZone(\"browser\", to),\r\n            raw: this.state.timerangeValue.raw,\r\n        };\r\n        this.setState({ timerangeValue: nextTimeRange });\r\n    }\r\n\r\n    onZoom = () => {\r\n        const { from, to } = getZoomedTimeRange(this.state.timerangeValue, 2);\r\n        const nextTimeRange = {\r\n            from: dateTimeForTimeZone(\"browser\", from),\r\n            to: dateTimeForTimeZone(\"browser\", to),\r\n            raw: this.state.timerangeValue.raw,\r\n        };\r\n        this.setState({ timerangeValue: nextTimeRange })\r\n    };\r\n\r\n    /* Render control functions */\r\n\r\n    getPropertyDetailsControl(propertyDetails): React.ReactNode {\r\n        if (propertyDetails.type === PropertyType.date) {\r\n            return (\r\n                <></> // we don't allow property detail selection or direct string input for date, for ease of use \r\n            );\r\n        } else {\r\n            return (\r\n                <SelectField value={this.state.value} onChange={this.setOperation} options={propertyDetails.options} displayError={this.state.filterValidationError} />\r\n            );\r\n        }\r\n    }\r\n\r\n    getValueInputControl(propertyDetails): React.ReactNode {\r\n        switch (propertyDetails.type) {\r\n            case PropertyType.number:\r\n                return <InputField inputType=\"number\" placeholderText=\"value\" value={this.state.value} onChange={this.setValue} displayError={this.state.filterValidationError} />;\r\n            case PropertyType.tag:\r\n                return (\r\n                    <>\r\n                        <InputField inputType=\"text\" placeholderText=\"key\" value={this.state.value} onChange={this.setValue} displayError={this.state.filterValidationError} />\r\n                        {this.state.operation.value === FilterOperations.equals ?\r\n                            <InputField inputType=\"text\" placeholderText=\"value\" value={this.state.additionalValue} onChange={this.setAdditionalValue} displayError={this.state.filterValidationError} />\r\n                            : <></>\r\n                        }\r\n                    </>\r\n                );\r\n            case PropertyType.date:\r\n                return (\r\n                    <div style={timePickerContainer}>\r\n                        <hr style={horizDivForTimePicker}></hr>\r\n                        <div style={timePicker}>\r\n                            <Label style={timePickerLabel}>Choose Time Range</Label>\r\n                            <Field\r\n                                invalid={this.state.filterValidationError !== undefined}\r\n                                error={this.state.filterValidationError}\r\n                            >\r\n                                <TimeRangePicker\r\n                                    timeZone=\"browser\"\r\n                                    value={this.state.timerangeValue}\r\n                                    onChange={timeRange => {\r\n                                        this.setState({ timerangeValue: timeRange });\r\n                                    }}\r\n                                    onMoveBackward={() => this.onMoveTimePicker(shiftDirections.Backward)}\r\n                                    onMoveForward={() => this.onMoveTimePicker(shiftDirections.Forward)}\r\n                                    onZoom={() => this.onZoom()}\r\n                                />\r\n                            </Field>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            default:\r\n            case PropertyType.string:\r\n                switch (this.state.selectedProperty) {\r\n                    case RunProperties.runType:\r\n                        return <SelectField value={this.state.value} onChange={this.setSelectValue} options={propertyDetails.allowedValues} displayError={this.state.filterValidationError} />\r\n                    case RunProperties.status:\r\n                        return <SelectField value={this.state.value} onChange={this.setSelectValue} options={propertyDetails.allowedValues} displayError={this.state.filterValidationError} />\r\n                    default:\r\n                        return <InputField inputType=\"text\" placeholderText=\"value\" value={this.state.value} onChange={this.setValue} displayError={this.state.filterValidationError} />\r\n                }\r\n        }\r\n    }\r\n\r\n    getAddFilter(): React.ReactNode {\r\n        return (\r\n            <Field>\r\n                <Button\r\n                    style={{ marginBottom: '10px', marginTop: '8px' }}\r\n                    className=\"gf-form-inline\"\r\n                    icon={\"filter\"}\r\n                    onClick={this.openEditor}\r\n                >\r\n                    Add filter\r\n                </Button>\r\n            </Field>\r\n        );\r\n    }\r\n\r\n    validateAndSave = () => {\r\n        const filter: IFilter = {} as any;\r\n        const propertyDetails = propertyDetailsDict[this.state.selectedProperty]\r\n        if (propertyDetails.type === PropertyType.date) {\r\n            // The createdDate will always have a default timerangeValue in the picker, so only for the Date type do we skip checking whether state.value is populate3d\r\n            filter.filterProps = [{\r\n                field: propertyDetails.queryPath,\r\n                operator: FilterOperations.greaterOrEqual,\r\n                values: [this.state.timerangeValue.from]\r\n            }, {\r\n                field: propertyDetails.queryPath,\r\n                operator: FilterOperations.lessOrEqual,\r\n                values: [this.state.timerangeValue.to]\r\n            }];\r\n            filter.displayString = `${this.state.selectedProperty}: ${this.state.timerangeValue.from.toString()} - ${this.state.timerangeValue.to.toString()}`\r\n        }\r\n        else if (this.state.value !== undefined) {\r\n            switch (propertyDetails.type) {\r\n                case PropertyType.number: {\r\n                    filter.filterProps = [{\r\n                        field: propertyDetails.queryPath,\r\n                        operator: this.state.operation.value,\r\n                        values: [Number.parseFloat(this.state.value)]\r\n                    }];\r\n                    filter.displayString = `${this.state.selectedProperty} ${this.state.operation.label} ${this.state.value}`\r\n                    break;\r\n                }\r\n                case PropertyType.tag: {\r\n                    if (this.state.value === '') {\r\n                        this.setState({ filterValidationError: \"Value required\" });\r\n                        break;\r\n                    }\r\n                    const values = this.state.operation.value === FilterOperations.equals ?\r\n                        [this.state.additionalValue] : [null];\r\n                    const predicate = this.state.operation.value === FilterOperations.equals ?\r\n                        `== ${this.state.additionalValue}` : \"is defined\";\r\n                    const displayString = `Tags: ${this.state.value} ${predicate}`;\r\n                    filter.filterProps = [{\r\n                        field: propertyDetails.queryPath + this.state.value,\r\n                        operator: this.state.operation.value,\r\n                        values\r\n                    }];\r\n                    filter.displayString = displayString;\r\n                    break;\r\n                }\r\n                default:\r\n                case PropertyType.string: {\r\n                    filter.filterProps = [{\r\n                        field: propertyDetails.queryPath,\r\n                        operator: this.state.operation.value,\r\n                        values: [this.state.value]\r\n                    }];\r\n                    filter.displayString = `${this.state.selectedProperty} ${this.state.operation.label} ${this.state.value}`\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.setState({ filterValidationError: \"Value required\" });\r\n            return;\r\n        }\r\n\r\n        this.props.onFiltersUpdate(this.props.filters.concat(filter));\r\n    }\r\n\r\n    render() {\r\n        const propertyDetails = propertyDetailsDict[this.state.selectedProperty];\r\n        return (\r\n            <>\r\n                {this.state.editorOpen ?\r\n                    <>\r\n                        <Label style={h3}>Add New Filter</Label>\r\n                        <div className=\"gf-form-inline\">\r\n                            <SelectField value={this.state.selectedProperty as any} onChange={this.setProperty} options={propertiesOptions} displayError={this.state.filterValidationError} />\r\n                            {this.getPropertyDetailsControl(propertyDetails)}\r\n                            {this.getValueInputControl(propertyDetails)}\r\n                        </div>\r\n                        <div className=\"gf-form-inline\" style={{ marginBottom: '20px' }}>\r\n                            <Button\r\n                                style={{ marginRight: '10px' }}\r\n                                className=\"gf-form-inline \"\r\n                                onClick={this.validateAndSave}\r\n                                icon={\"plus\"}\r\n                            >Save</Button>\r\n                            <Button\r\n                                className=\"gf-form-inline\"\r\n                                onClick={this.closeEditor}\r\n                                icon={\"times\"}\r\n                                variant={\"destructive\"}\r\n                            >Cancel</Button>\r\n                        </div>\r\n                    </> : this.getAddFilter()\r\n                }\r\n                <Label style={h2}>Run Filters</Label>\r\n                <Checkbox\r\n                    value={this.props.includeChildRuns}\r\n                    onChange={this.onChildRunsChange}\r\n                    label=\"Include child runs in list\"\r\n                />\r\n                {this.props.filters.map((filter, i) => {\r\n                    return (\r\n                        <Button\r\n                            style={{ margin: '0px 5px' }}\r\n                            size={\"sm\"}\r\n                            variant={\"secondary\"}\r\n                            onClick={this.deleteFilter.bind(this, i)}\r\n                            icon={\"times\"}\r\n                        >\r\n                            {filter.displayString}\r\n                        </Button>\r\n                    );\r\n                })}\r\n            </>\r\n        );\r\n    }\r\n}","import { TimeRange, toUtc, AbsoluteTimeRange } from '@grafana/data';\r\n\r\nexport enum shiftDirections {\r\n  Forward,\r\n  Backward\r\n}\r\n\r\nexport const getShiftedTimeRange = (direction: shiftDirections, origRange: TimeRange): AbsoluteTimeRange => {\r\n  const range = {\r\n    from: toUtc(origRange.from),\r\n    to: toUtc(origRange.to),\r\n  };\r\n\r\n  const timespan = (range.to.valueOf() - range.from.valueOf()) / 2;\r\n  let to: number, from: number;\r\n\r\n  if (direction === shiftDirections.Backward) {\r\n    to = range.to.valueOf() - timespan;\r\n    from = range.from.valueOf() - timespan;\r\n  } else if (direction === shiftDirections.Forward) {\r\n    to = range.to.valueOf() + timespan;\r\n    from = range.from.valueOf() + timespan;\r\n    if (to > Date.now() && range.to.valueOf() < Date.now()) {\r\n      to = Date.now();\r\n      from = range.from.valueOf();\r\n    }\r\n  } else {\r\n    to = range.to.valueOf();\r\n    from = range.from.valueOf();\r\n  }\r\n\r\n  return { from, to };\r\n};\r\n\r\nexport const getZoomedTimeRange = (range: TimeRange, factor: number): AbsoluteTimeRange => {\r\n  const timespan = range.to.valueOf() - range.from.valueOf();\r\n  const center = range.to.valueOf() - timespan / 2;\r\n\r\n  const to = center + (timespan * factor) / 2;\r\n  const from = center - (timespan * factor) / 2;\r\n\r\n  return { from, to };\r\n};","import React from 'react';\r\nimport { Field, Select } from '@grafana/ui';\r\nimport { SelectableValue } from '@grafana/data';\r\n\r\nexport interface ISelectFieldProps {\r\n    value?: string | undefined;\r\n    onChange: (selection: SelectableValue) => void;\r\n    options: SelectableValue[];\r\n    displayError?: string | undefined;\r\n}\r\n\r\n\r\nexport function SelectField(props: ISelectFieldProps) {\r\n    return (\r\n        <Field className=\"gf-form-inline width-10\"\r\n            invalid={props.displayError !== undefined}\r\n            error={props.displayError}\r\n        >\r\n            <Select\r\n                className=\"width-9\"\r\n                options={props.options}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n        </Field>\r\n    );\r\n}\r\n","import React, { ChangeEvent } from 'react';\r\nimport { Field, Input } from '@grafana/ui';\r\n\r\nexport interface IInputFieldProps {\r\n    inputType: string;\r\n    placeholderText: string;\r\n    value?: string | undefined;\r\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n    displayError?: string | undefined;\r\n}\r\n\r\nexport function InputField(props: IInputFieldProps) {\r\n    return (\r\n        <Field className=\"gf-form-inline width-10\"\r\n            invalid={props.displayError !== undefined}\r\n            error={props.displayError}\r\n        >\r\n            <Input\r\n                className=\"width-9\"\r\n                placeholder={props.placeholderText}\r\n                type={props.inputType}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n        </Field>\r\n    );\r\n}"],"sourceRoot":""}